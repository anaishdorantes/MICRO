

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 10 18:36:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 23/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _PORTAbits	set	3968
    51   000000                     _TRISAbits	set	3986
    52   000000                     _TRISB	set	3987
    53   000000                     _ADCON1	set	4033
    54   000000                     _LATAbits	set	3977
    55                           
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59   000984                     __pcinit:
    60                           	callstack 0
    61   000984                     start_initialization:
    62                           	callstack 0
    63   000984                     __initialization:
    64                           	callstack 0
    65                           
    66                           ; Clear objects allocated to COMRAM (12 bytes)
    67   000984  EE00  F001         	lfsr	0,__pbssCOMRAM
    68   000988  0E0C               	movlw	12
    69   00098A                     clear_0:
    70   00098A  6AEE               	clrf	postinc0,c
    71   00098C  06E8               	decf	wreg,f,c
    72   00098E  E1FD               	bnz	clear_0
    73   000990                     end_of_initialization:
    74                           	callstack 0
    75   000990                     __end_of__initialization:
    76                           	callstack 0
    77   000990  0100               	movlb	0
    78   000992  EF01  F004         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81   000001                     __pbssCOMRAM:
    82                           	callstack 0
    83   000001                     _semaforoPeatonRojo:
    84                           	callstack 0
    85   000001                     	ds	2
    86   000003                     _semaforoPeatonVerde:
    87                           	callstack 0
    88   000003                     	ds	2
    89   000005                     _semaforoAmarillo:
    90                           	callstack 0
    91   000005                     	ds	2
    92   000007                     _semaforoAutosRojo:
    93                           	callstack 0
    94   000007                     	ds	2
    95   000009                     _semaforoAutosVerde:
    96                           	callstack 0
    97   000009                     	ds	2
    98   00000B                     _contador:
    99                           	callstack 0
   100   00000B                     	ds	2
   101                           
   102                           	psect	cstackCOMRAM
   103   00000D                     __pcstackCOMRAM:
   104                           	callstack 0
   105   00000D                     ??_delay_10_seconds:
   106   00000D                     ??_delay_15_seconds:
   107   00000D                     
   108                           ; 1 bytes @ 0x0
   109   00000D                     	ds	1
   110   00000E                     delay_10_seconds@i:
   111                           	callstack 0
   112   00000E                     delay_15_seconds@i:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x1
   116   00000E                     	ds	2
   117   000010                     ??_main:
   118                           
   119                           ; 1 bytes @ 0x3
   120   000010                     	ds	1
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 31 in file "main.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;		None
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : 0/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   141 ;;      Params:         0       0       0       0       0       0       0       0       0
   142 ;;      Locals:         0       0       0       0       0       0       0       0       0
   143 ;;      Temps:          1       0       0       0       0       0       0       0       0
   144 ;;      Totals:         1       0       0       0       0       0       0       0       0
   145 ;;Total ram usage:        1 bytes
   146 ;; Hardware stack levels required when called: 1
   147 ;; This function calls:
   148 ;;		_delay_10_seconds
   149 ;;		_delay_15_seconds
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156   000802                     __ptext0:
   157                           	callstack 0
   158   000802                     _main:
   159                           	callstack 30
   160   000802                     
   161                           ;main.c: 32:     ADCON1 = 0x0F;
   162   000802  0E0F               	movlw	15
   163   000804  6EC1               	movwf	193,c	;volatile
   164                           
   165                           ;main.c: 33:     TRISB = 0;
   166   000806  0E00               	movlw	0
   167   000808  6E93               	movwf	147,c	;volatile
   168   00080A                     
   169                           ;main.c: 34:     TRISAbits.TRISA0 = 1;
   170   00080A  8092               	bsf	146,0,c	;volatile
   171   00080C                     
   172                           ;main.c: 35:     TRISAbits.TRISA1 = 0;
   173   00080C  9292               	bcf	146,1,c	;volatile
   174   00080E                     
   175                           ;main.c: 36:     TRISAbits.TRISA2 = 0;
   176   00080E  9492               	bcf	146,2,c	;volatile
   177   000810                     
   178                           ;main.c: 37:     TRISAbits.TRISA3 = 0;
   179   000810  9692               	bcf	146,3,c	;volatile
   180   000812                     
   181                           ;main.c: 38:     TRISAbits.TRISA4 = 0;
   182   000812  9892               	bcf	146,4,c	;volatile
   183   000814                     
   184                           ;main.c: 39:     TRISAbits.TRISA5 = 0;
   185   000814  9A92               	bcf	146,5,c	;volatile
   186   000816                     l773:
   187                           
   188                           ;main.c: 43:         if (PORTAbits.RA0 == 1) {
   189   000816  A080               	btfss	128,0,c	;volatile
   190   000818  EF10  F004         	goto	u41
   191   00081C  EF12  F004         	goto	u40
   192   000820                     u41:
   193   000820  EF23  F004         	goto	l779
   194   000824                     u40:
   195   000824                     
   196                           ;main.c: 44:             _delay((unsigned long)((50)*(2000000/4000.0)));
   197   000824  0E21               	movlw	33
   198   000826  6E10               	movwf	??_main^0,c
   199   000828  0E76               	movlw	118
   200   00082A                     u87:
   201   00082A  2EE8               	decfsz	wreg,f,c
   202   00082C  D7FE               	bra	u87
   203   00082E  2E10               	decfsz	??_main^0,f,c
   204   000830  D7FC               	bra	u87
   205   000832  D000               	nop2	
   206   000834                     l46:
   207   000834  B080               	btfsc	128,0,c	;volatile
   208   000836  EF1F  F004         	goto	u51
   209   00083A  EF21  F004         	goto	u50
   210   00083E                     u51:
   211   00083E  EF1A  F004         	goto	l46
   212   000842                     u50:
   213   000842                     
   214                           ;main.c: 46:             contador++;
   215   000842  4A0B               	infsnz	_contador^0,f,c
   216   000844  2A0C               	incf	(_contador+1)^0,f,c
   217   000846                     l779:
   218                           
   219                           ;main.c: 50:         if (contador >= 7) {
   220   000846  BE0C               	btfsc	(_contador+1)^0,7,c
   221   000848  EF2F  F004         	goto	u61
   222   00084C  500C               	movf	(_contador+1)^0,w,c
   223   00084E  E109               	bnz	u60
   224   000850  0E07               	movlw	7
   225   000852  5C0B               	subwf	_contador^0,w,c
   226   000854  A0D8               	btfss	status,0,c
   227   000856  EF2F  F004         	goto	u61
   228   00085A  EF31  F004         	goto	u60
   229   00085E                     u61:
   230   00085E  EF68  F004         	goto	l813
   231   000862                     u60:
   232   000862                     
   233                           ;main.c: 51:             semaforoAutosVerde = 0;
   234   000862  0E00               	movlw	0
   235   000864  6E0A               	movwf	(_semaforoAutosVerde+1)^0,c
   236   000866  0E00               	movlw	0
   237   000868  6E09               	movwf	_semaforoAutosVerde^0,c
   238                           
   239                           ;main.c: 52:             semaforoAmarillo = 1;
   240   00086A  0E00               	movlw	0
   241   00086C  6E06               	movwf	(_semaforoAmarillo+1)^0,c
   242   00086E  0E01               	movlw	1
   243   000870  6E05               	movwf	_semaforoAmarillo^0,c
   244   000872                     
   245                           ;main.c: 53:             LATAbits.LATA1 = semaforoAutosVerde;
   246   000872  9289               	bcf	137,1,c	;volatile
   247   000874                     
   248                           ;main.c: 54:             LATAbits.LATA2 = semaforoAmarillo;
   249   000874  8489               	bsf	137,2,c	;volatile
   250   000876                     
   251                           ;main.c: 55:             delay_10_seconds();
   252   000876  ECA5  F004         	call	_delay_10_seconds	;wreg free
   253   00087A                     
   254                           ;main.c: 56:             semaforoAmarillo = 0;
   255   00087A  0E00               	movlw	0
   256   00087C  6E06               	movwf	(_semaforoAmarillo+1)^0,c
   257   00087E  0E00               	movlw	0
   258   000880  6E05               	movwf	_semaforoAmarillo^0,c
   259   000882                     
   260                           ;main.c: 57:             semaforoAutosRojo= 1;
   261   000882  0E00               	movlw	0
   262   000884  6E08               	movwf	(_semaforoAutosRojo+1)^0,c
   263   000886  0E01               	movlw	1
   264   000888  6E07               	movwf	_semaforoAutosRojo^0,c
   265   00088A                     
   266                           ;main.c: 58:             semaforoPeatonVerde = 1;
   267   00088A  0E00               	movlw	0
   268   00088C  6E04               	movwf	(_semaforoPeatonVerde+1)^0,c
   269   00088E  0E01               	movlw	1
   270   000890  6E03               	movwf	_semaforoPeatonVerde^0,c
   271   000892                     
   272                           ;main.c: 59:             semaforoPeatonRojo = 0;
   273   000892  0E00               	movlw	0
   274   000894  6E02               	movwf	(_semaforoPeatonRojo+1)^0,c
   275   000896  0E00               	movlw	0
   276   000898  6E01               	movwf	_semaforoPeatonRojo^0,c
   277   00089A                     
   278                           ;main.c: 60:             LATAbits.LATA2 = semaforoAmarillo;
   279   00089A  9489               	bcf	137,2,c	;volatile
   280   00089C                     
   281                           ;main.c: 61:             LATAbits.LATA3 = semaforoAutosRojo;
   282   00089C  8689               	bsf	137,3,c	;volatile
   283   00089E                     
   284                           ;main.c: 62:             LATAbits.LATA4 = semaforoPeatonVerde;
   285   00089E  8889               	bsf	137,4,c	;volatile
   286   0008A0                     
   287                           ;main.c: 63:             LATAbits.LATA5 = semaforoPeatonRojo;
   288   0008A0  9A89               	bcf	137,5,c	;volatile
   289   0008A2                     
   290                           ;main.c: 64:             delay_15_seconds();
   291   0008A2  EC88  F004         	call	_delay_15_seconds	;wreg free
   292                           
   293                           ;main.c: 66:             semaforoAutosVerde = 1;
   294   0008A6  0E00               	movlw	0
   295   0008A8  6E0A               	movwf	(_semaforoAutosVerde+1)^0,c
   296   0008AA  0E01               	movlw	1
   297   0008AC  6E09               	movwf	_semaforoAutosVerde^0,c
   298                           
   299                           ;main.c: 67:             semaforoPeatonVerde = 0;
   300   0008AE  0E00               	movlw	0
   301   0008B0  6E04               	movwf	(_semaforoPeatonVerde+1)^0,c
   302   0008B2  0E00               	movlw	0
   303   0008B4  6E03               	movwf	_semaforoPeatonVerde^0,c
   304                           
   305                           ;main.c: 68:             semaforoPeatonRojo = 1;
   306   0008B6  0E00               	movlw	0
   307   0008B8  6E02               	movwf	(_semaforoPeatonRojo+1)^0,c
   308   0008BA  0E01               	movlw	1
   309   0008BC  6E01               	movwf	_semaforoPeatonRojo^0,c
   310   0008BE                     
   311                           ;main.c: 69:             LATAbits.LATA1 = semaforoAutosVerde;
   312   0008BE  8289               	bsf	137,1,c	;volatile
   313   0008C0                     
   314                           ;main.c: 70:             LATAbits.LATA4 = semaforoPeatonVerde;
   315   0008C0  9889               	bcf	137,4,c	;volatile
   316   0008C2                     
   317                           ;main.c: 71:             LATAbits.LATA5 = semaforoPeatonRojo;
   318   0008C2  8A89               	bsf	137,5,c	;volatile
   319                           
   320                           ;main.c: 72:             contador = 0;
   321   0008C4  0E00               	movlw	0
   322   0008C6  6E0C               	movwf	(_contador+1)^0,c
   323   0008C8  0E00               	movlw	0
   324   0008CA  6E0B               	movwf	_contador^0,c
   325                           
   326                           ;main.c: 73:         } else {
   327   0008CC  EF7C  F004         	goto	l823
   328   0008D0                     l813:
   329                           
   330                           ;main.c: 74:             semaforoAutosVerde = 1;
   331   0008D0  0E00               	movlw	0
   332   0008D2  6E0A               	movwf	(_semaforoAutosVerde+1)^0,c
   333   0008D4  0E01               	movlw	1
   334   0008D6  6E09               	movwf	_semaforoAutosVerde^0,c
   335                           
   336                           ;main.c: 75:             semaforoPeatonRojo = 1;
   337   0008D8  0E00               	movlw	0
   338   0008DA  6E02               	movwf	(_semaforoPeatonRojo+1)^0,c
   339   0008DC  0E01               	movlw	1
   340   0008DE  6E01               	movwf	_semaforoPeatonRojo^0,c
   341                           
   342                           ;main.c: 76:             semaforoAutosRojo=0;
   343   0008E0  0E00               	movlw	0
   344   0008E2  6E08               	movwf	(_semaforoAutosRojo+1)^0,c
   345   0008E4  0E00               	movlw	0
   346   0008E6  6E07               	movwf	_semaforoAutosRojo^0,c
   347   0008E8                     
   348                           ;main.c: 77:             LATAbits.LATA1 = semaforoAutosVerde;
   349   0008E8  8289               	bsf	137,1,c	;volatile
   350   0008EA                     
   351                           ;main.c: 78:             LATAbits.LATA2 = semaforoAmarillo;
   352   0008EA  B005               	btfsc	_semaforoAmarillo^0,0,c
   353   0008EC  D002               	bra	u75
   354   0008EE  9489               	bcf	137,2,c	;volatile
   355   0008F0  D001               	bra	u76
   356   0008F2                     u75:
   357   0008F2  8489               	bsf	137,2,c	;volatile
   358   0008F4                     u76:
   359   0008F4                     
   360                           ;main.c: 79:             LATAbits.LATA3 = semaforoAutosRojo;
   361   0008F4  9689               	bcf	137,3,c	;volatile
   362   0008F6                     
   363                           ;main.c: 80:             LATAbits.LATA5 = semaforoPeatonRojo;
   364   0008F6  8A89               	bsf	137,5,c	;volatile
   365   0008F8                     l823:
   366                           
   367                           ;main.c: 84:         _delay((unsigned long)((100)*(2000000/4000.0)));
   368   0008F8  0E41               	movlw	65
   369   0008FA  6E10               	movwf	??_main^0,c
   370   0008FC  0EEE               	movlw	238
   371   0008FE                     u97:
   372   0008FE  2EE8               	decfsz	wreg,f,c
   373   000900  D7FE               	bra	u97
   374   000902  2E10               	decfsz	??_main^0,f,c
   375   000904  D7FC               	bra	u97
   376   000906  D000               	nop2	
   377   000908  EF0B  F004         	goto	l773
   378   00090C  EF00  F000         	goto	start
   379   000910                     __end_of_main:
   380                           	callstack 0
   381                           
   382 ;; *************** function _delay_15_seconds *****************
   383 ;; Defined at:
   384 ;;		line 19 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  i               2    1[COMRAM] int 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         0       0       0       0       0       0       0       0       0
   399 ;;      Locals:         2       0       0       0       0       0       0       0       0
   400 ;;      Temps:          1       0       0       0       0       0       0       0       0
   401 ;;      Totals:         3       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:        3 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412   000910                     __ptext1:
   413                           	callstack 0
   414   000910                     _delay_15_seconds:
   415                           	callstack 30
   416   000910                     
   417                           ;main.c: 20:     for(int i = 0; i < 1500; i++) {
   418   000910  0E00               	movlw	0
   419   000912  6E0F               	movwf	(delay_15_seconds@i+1)^0,c
   420   000914  0E00               	movlw	0
   421   000916  6E0E               	movwf	delay_15_seconds@i^0,c
   422   000918                     l745:
   423                           
   424                           ;main.c: 21:         _delay((unsigned long)((100)*(2000000/4000.0)));
   425   000918  0E41               	movlw	65
   426   00091A  6E0D               	movwf	??_delay_15_seconds^0,c
   427   00091C  0EEE               	movlw	238
   428   00091E                     u107:
   429   00091E  2EE8               	decfsz	wreg,f,c
   430   000920  D7FE               	bra	u107
   431   000922  2E0D               	decfsz	??_delay_15_seconds^0,f,c
   432   000924  D7FC               	bra	u107
   433   000926  D000               	nop2	
   434   000928                     
   435                           ;main.c: 22:     }
   436   000928  4A0E               	infsnz	delay_15_seconds@i^0,f,c
   437   00092A  2A0F               	incf	(delay_15_seconds@i+1)^0,f,c
   438   00092C  BE0F               	btfsc	(delay_15_seconds@i+1)^0,7,c
   439   00092E  EFA2  F004         	goto	u21
   440   000932  0EDC               	movlw	220
   441   000934  5C0E               	subwf	delay_15_seconds@i^0,w,c
   442   000936  0E05               	movlw	5
   443   000938  580F               	subwfb	(delay_15_seconds@i+1)^0,w,c
   444   00093A  A0D8               	btfss	status,0,c
   445   00093C  EFA2  F004         	goto	u21
   446   000940  EFA4  F004         	goto	u20
   447   000944                     u21:
   448   000944  EF8C  F004         	goto	l745
   449   000948                     u20:
   450   000948  0012               	return		;funcret
   451   00094A                     __end_of_delay_15_seconds:
   452                           	callstack 0
   453                           
   454 ;; *************** function _delay_10_seconds *****************
   455 ;; Defined at:
   456 ;;		line 13 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  i               2    1[COMRAM] int 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         0       0       0       0       0       0       0       0       0
   471 ;;      Locals:         2       0       0       0       0       0       0       0       0
   472 ;;      Temps:          1       0       0       0       0       0       0       0       0
   473 ;;      Totals:         3       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        3 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text2
   484   00094A                     __ptext2:
   485                           	callstack 0
   486   00094A                     _delay_10_seconds:
   487                           	callstack 30
   488   00094A                     
   489                           ;main.c: 14:     for(int i = 0; i < 1000; i++) {
   490   00094A  0E00               	movlw	0
   491   00094C  6E0F               	movwf	(delay_10_seconds@i+1)^0,c
   492   00094E  0E00               	movlw	0
   493   000950  6E0E               	movwf	delay_10_seconds@i^0,c
   494   000952                     l735:
   495                           
   496                           ;main.c: 15:         _delay((unsigned long)((100)*(2000000/4000.0)));
   497   000952  0E41               	movlw	65
   498   000954  6E0D               	movwf	??_delay_10_seconds^0,c
   499   000956  0EEE               	movlw	238
   500   000958                     u117:
   501   000958  2EE8               	decfsz	wreg,f,c
   502   00095A  D7FE               	bra	u117
   503   00095C  2E0D               	decfsz	??_delay_10_seconds^0,f,c
   504   00095E  D7FC               	bra	u117
   505   000960  D000               	nop2	
   506   000962                     
   507                           ;main.c: 16:     }
   508   000962  4A0E               	infsnz	delay_10_seconds@i^0,f,c
   509   000964  2A0F               	incf	(delay_10_seconds@i+1)^0,f,c
   510   000966  BE0F               	btfsc	(delay_10_seconds@i+1)^0,7,c
   511   000968  EFBF  F004         	goto	u11
   512   00096C  0EE8               	movlw	232
   513   00096E  5C0E               	subwf	delay_10_seconds@i^0,w,c
   514   000970  0E03               	movlw	3
   515   000972  580F               	subwfb	(delay_10_seconds@i+1)^0,w,c
   516   000974  A0D8               	btfss	status,0,c
   517   000976  EFBF  F004         	goto	u11
   518   00097A  EFC1  F004         	goto	u10
   519   00097E                     u11:
   520   00097E  EFA9  F004         	goto	l735
   521   000982                     u10:
   522   000982  0012               	return		;funcret
   523   000984                     __end_of_delay_10_seconds:
   524                           	callstack 0
   525                           
   526                           	psect	smallconst
   527   000800                     __psmallconst:
   528                           	callstack 0
   529   000800  00                 	db	0
   530   000801  00                 	db	0	; dummy byte at the end
   531   000000                     
   532                           	psect	rparam
   533   000000                     
   534                           	psect	config
   535                           
   536                           ;Config register CONFIG1L @ 0x300000
   537                           ;	PLL Prescaler Selection bits
   538                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   539                           ;	System Clock Postscaler Selection bits
   540                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   541                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   542                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   543   300000                     	org	3145728
   544   300000  00                 	db	0
   545                           
   546                           ;Config register CONFIG1H @ 0x300001
   547                           ;	Oscillator Selection bits
   548                           ;	FOSC = HS, HS oscillator (HS)
   549                           ;	Fail-Safe Clock Monitor Enable bit
   550                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   551                           ;	Internal/External Oscillator Switchover bit
   552                           ;	IESO = OFF, Oscillator Switchover mode disabled
   553   300001                     	org	3145729
   554   300001  0C                 	db	12
   555                           
   556                           ;Config register CONFIG2L @ 0x300002
   557                           ;	Power-up Timer Enable bit
   558                           ;	PWRT = OFF, PWRT disabled
   559                           ;	Brown-out Reset Enable bits
   560                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   561                           ;	Brown-out Reset Voltage bits
   562                           ;	BORV = 3, Minimum setting 2.05V
   563                           ;	USB Voltage Regulator Enable bit
   564                           ;	VREGEN = OFF, USB voltage regulator disabled
   565   300002                     	org	3145730
   566   300002  1F                 	db	31
   567                           
   568                           ;Config register CONFIG2H @ 0x300003
   569                           ;	Watchdog Timer Enable bit
   570                           ;	WDT = ON, WDT enabled
   571                           ;	Watchdog Timer Postscale Select bits
   572                           ;	WDTPS = 32768, 1:32768
   573   300003                     	org	3145731
   574   300003  1F                 	db	31
   575                           
   576                           ; Padding undefined space
   577   300004                     	org	3145732
   578   300004  FF                 	db	255
   579                           
   580                           ;Config register CONFIG3H @ 0x300005
   581                           ;	CCP2 MUX bit
   582                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   583                           ;	PORTB A/D Enable bit
   584                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   585                           ;	Low-Power Timer 1 Oscillator Enable bit
   586                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   587                           ;	MCLR Pin Enable bit
   588                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   589   300005                     	org	3145733
   590   300005  83                 	db	131
   591                           
   592                           ;Config register CONFIG4L @ 0x300006
   593                           ;	Stack Full/Underflow Reset Enable bit
   594                           ;	STVREN = ON, Stack full/underflow will cause Reset
   595                           ;	Single-Supply ICSP Enable bit
   596                           ;	LVP = ON, Single-Supply ICSP enabled
   597                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   598                           ;	ICPRT = OFF, ICPORT disabled
   599                           ;	Extended Instruction Set Enable bit
   600                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   601                           ;	Background Debugger Enable bit
   602                           ;	DEBUG = 0x1, unprogrammed default
   603   300006                     	org	3145734
   604   300006  85                 	db	133
   605                           
   606                           ; Padding undefined space
   607   300007                     	org	3145735
   608   300007  FF                 	db	255
   609                           
   610                           ;Config register CONFIG5L @ 0x300008
   611                           ;	Code Protection bit
   612                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   613                           ;	Code Protection bit
   614                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   615                           ;	Code Protection bit
   616                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   617                           ;	Code Protection bit
   618                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   619   300008                     	org	3145736
   620   300008  0F                 	db	15
   621                           
   622                           ;Config register CONFIG5H @ 0x300009
   623                           ;	Boot Block Code Protection bit
   624                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   625                           ;	Data EEPROM Code Protection bit
   626                           ;	CPD = OFF, Data EEPROM is not code-protected
   627   300009                     	org	3145737
   628   300009  C0                 	db	192
   629                           
   630                           ;Config register CONFIG6L @ 0x30000A
   631                           ;	Write Protection bit
   632                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   633                           ;	Write Protection bit
   634                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   635                           ;	Write Protection bit
   636                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   637                           ;	Write Protection bit
   638                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   639   30000A                     	org	3145738
   640   30000A  0F                 	db	15
   641                           
   642                           ;Config register CONFIG6H @ 0x30000B
   643                           ;	Configuration Register Write Protection bit
   644                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   645                           ;	Boot Block Write Protection bit
   646                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   647                           ;	Data EEPROM Write Protection bit
   648                           ;	WRTD = OFF, Data EEPROM is not write-protected
   649   30000B                     	org	3145739
   650   30000B  E0                 	db	224
   651                           
   652                           ;Config register CONFIG7L @ 0x30000C
   653                           ;	Table Read Protection bit
   654                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   655                           ;	Table Read Protection bit
   656                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   657                           ;	Table Read Protection bit
   658                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   659                           ;	Table Read Protection bit
   660                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   661   30000C                     	org	3145740
   662   30000C  0F                 	db	15
   663                           
   664                           ;Config register CONFIG7H @ 0x30000D
   665                           ;	Boot Block Table Read Protection bit
   666                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   667   30000D                     	org	3145741
   668   30000D  40                 	db	64
   669                           tosu	equ	0xFFF
   670                           tosh	equ	0xFFE
   671                           tosl	equ	0xFFD
   672                           stkptr	equ	0xFFC
   673                           pclatu	equ	0xFFB
   674                           pclath	equ	0xFFA
   675                           pcl	equ	0xFF9
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           prodh	equ	0xFF4
   681                           prodl	equ	0xFF3
   682                           indf0	equ	0xFEF
   683                           postinc0	equ	0xFEE
   684                           postdec0	equ	0xFED
   685                           preinc0	equ	0xFEC
   686                           plusw0	equ	0xFEB
   687                           fsr0h	equ	0xFEA
   688                           fsr0l	equ	0xFE9
   689                           wreg	equ	0xFE8
   690                           indf1	equ	0xFE7
   691                           postinc1	equ	0xFE6
   692                           postdec1	equ	0xFE5
   693                           preinc1	equ	0xFE4
   694                           plusw1	equ	0xFE3
   695                           fsr1h	equ	0xFE2
   696                           fsr1l	equ	0xFE1
   697                           bsr	equ	0xFE0
   698                           indf2	equ	0xFDF
   699                           postinc2	equ	0xFDE
   700                           postdec2	equ	0xFDD
   701                           preinc2	equ	0xFDC
   702                           plusw2	equ	0xFDB
   703                           fsr2h	equ	0xFDA
   704                           fsr2l	equ	0xFD9
   705                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_10_seconds
    _main->_delay_15_seconds

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      60
                                              3 COMRAM     1     1      0
                   _delay_10_seconds
                   _delay_15_seconds
 ---------------------------------------------------------------------------------
 (1) _delay_15_seconds                                     3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _delay_10_seconds                                     3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_10_seconds
   _delay_15_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      10       1       16.8%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlh         2D      0       0      22        0.0%
BITBIGSFRlll        20      0       0      25        0.0%
BITBIGSFRllhh        8      0       0      23        0.0%
BITBIGSFRllhl        8      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10       3        0.0%
DATA                 0      0      10       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 10 18:36:54 2024

                      l34 0948                        l29 0982                        l46 0834  
                      u10 0982                        u11 097E                        u20 0948  
                      u21 0944                        u40 0824                        u41 0820  
                      u50 0842                        u51 083E                        u60 0862  
                      u61 085E                        u75 08F2                        u76 08F4  
                      u87 082A                        u97 08FE                       l801 089E  
                     l811 08C2                       l803 08A0                       l821 08F6  
                     l805 08A2                       l813 08D0                       l735 0952  
                     l815 08E8                       l823 08F8                       l807 08BE  
                     l737 0962                       l729 094A                       l745 0918  
                     l817 08EA                       l809 08C0                       l761 080A  
                     l747 0928                       l739 0910                       l819 08F4  
                     l771 0814                       l763 080C                       l781 0862  
                     l773 0816                       l765 080E                       l791 0882  
                     l783 0872                       l775 0824                       l767 0810  
                     l759 0802                       l793 088A                       l785 0874  
                     l777 0842                       l769 0812                       l795 0892  
                     l787 0876                       l779 0846                       l797 089A  
                     l789 087A                       l799 089C                       u107 091E  
                     u117 0958          _semaforoAmarillo 0005                       wreg 0FE8  
                    _main 0802                      start 0000              ___param_bank 0000  
                   ?_main 000D         _semaforoAutosRojo 0007                     _TRISB 0F93  
                   status 0FD8           __initialization 0984              __end_of_main 0910  
                  ??_main 0010             __activetblptr 0000                    _ADCON1 0FC1  
      _semaforoAutosVerde 0009        _semaforoPeatonRojo 0001                    clear_0 098A  
                  isa$std 0001              __mediumconst 0000                __accesstop 0060  
 __end_of__initialization 0990             ___rparam_used 0001            __pcstackCOMRAM 000D  
        _delay_10_seconds 094A                   __Hparam 0000                   __Lparam 0000  
     _semaforoPeatonVerde 0003          _delay_15_seconds 0910              __psmallconst 0800  
                 __pcinit 0984                   __ramtop 0800                   __ptext0 0802  
                 __ptext1 0910                   __ptext2 094A      end_of_initialization 0990  
                 postinc0 0FEE                 _PORTAbits 0F80                 _TRISAbits 0F92  
     start_initialization 0984  __end_of_delay_10_seconds 0984               __pbssCOMRAM 0001  
__end_of_delay_15_seconds 094A               __smallconst 0800                  _LATAbits 0F89  
                __Hrparam 0000                  __Lrparam 0000                  _contador 000B  
                isa$xinst 0000         delay_10_seconds@i 000E         ?_delay_10_seconds 000D  
      ??_delay_10_seconds 000D         ?_delay_15_seconds 000D        ??_delay_15_seconds 000D  
       delay_15_seconds@i 000E  
